package com.example.demo.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.multipart.MultipartFile;

import com.example.demo.domain.Image;
import com.example.demo.domain.Post;
import com.example.demo.error.BoardException;
import com.example.demo.error.ErrorCode;
import com.example.demo.repository.ImageRepository;

@Service
public class ImageService {

	private final String DIR_PATH = "src/main/resources/images/";
	private final List<String> ALLOWED_TYPES = List.of("image/jpeg", "image/png");
	private ImageRepository imageRepository;
	public ImageService(ImageRepository imageRepository) {
		super();
		this.imageRepository = imageRepository;
	}
	
	@Transactional
	public void saveImage(MultipartFile imageFile, Post post) throws IOException {
		if(!ALLOWED_TYPES.contains(imageFile.getContentType())) {
			throw new BoardException(ErrorCode.INVALID_IMAGE_FILE);
		}
		String originalFileName = imageFile.getOriginalFilename();
		String fileName = UUID.randomUUID().toString() + originalFileName;
		Image saved = this.imageRepository.save(Image.builder()
				.fileName(fileName)
				.originalFileName(originalFileName)
				.post(post)
				.build());		
		post.addImage(saved);
		
		
		Path path = Paths.get(DIR_PATH + fileName);
		Files.createDirectories(path.getParent());
		Files.write(path, imageFile.getBytes());
	}
	
	public byte[] getImage(Integer imageId) {
		Image saved = this.imageRepository.findById(imageId).orElseThrow(()->{throw new BoardException(ErrorCode.IMAGE_NOT_FOUND);});
	}
	
}

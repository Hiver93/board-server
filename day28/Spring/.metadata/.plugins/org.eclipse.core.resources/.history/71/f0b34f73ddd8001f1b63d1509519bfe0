package com.example.demo.controller;

import java.util.stream.Stream;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.dto.UserReqDto;
import com.example.demo.dto.UserResDto;
import com.example.demo.global.BaseResBody;
import com.example.demo.service.UserService;

import jakarta.servlet.http.HttpServletRequest;
import jakarta.validation.Valid;

@RestController
@RequestMapping("/users")
public class UserController {

	private UserService userService;

	public UserController(UserService userService) {
		super();
		this.userService = userService;
	}
	
	@PostMapping("/signup")
	public ResponseEntity<BaseResBody> signup(@RequestBody @Valid UserReqDto.Signup dto){
		this.userService.createUser(dto.toEntity());
		return BaseResBody.buildResponseEntity(HttpStatus.CREATED, "signed up");
	}
	
	@PostMapping("/login")
	public ResponseEntity<BaseResBody> login(@RequestBody @Valid UserReqDto.Login dto, HttpServletRequest request){
//		System.out.println(request.getSession().getId());
//		Stream.of(request.getCookies())
//		.forEach(System.out::println);
		
		System.out.println(request.getRequestedSessionId());
		UserResDto.Login result = UserResDto.Login.fromEntity(this.userService.getUuid(dto.toEntity()));
		return BaseResBody.buildResponseEntity(HttpStatus.OK, result, "loged in");
	}
	
	@PostMapping("/status")
	public ResponseEntity<BaseResBody> status(@RequestBody @Valid UserReqDto.Status dto, HttpServletRequest request){
		
		System.out.println(request.getRequestedSessionId());
		UserResDto.Status result = UserResDto.Status.fromEntity(this.userService.getUser(dto.getUuid()));
		return BaseResBody.buildResponseEntity(HttpStatus.OK, result, "get status");
	}
}

package com.example.demo.repository;

import java.util.List;
import java.util.Optional;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.springframework.data.domain.Pageable;

import com.example.demo.entity.Post;

@Mapper
public interface PostMapper {

	@Select("SELECT * FROM post WHERE title LIKE CONCAT('%',#{keyword},'%') OR content LIKE CONCAT('%',#{keyword},'%') "
			+ "ORDER BY created_at DESC LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}")
	public List<Post> findAllByTitleOrContent(@Param("pageable") Pageable pageable, @Param("keyword") String keyword);
	
	@Select("SELECT * FROM post WHERE title LIKE CONCAT('%',#{keyword},'%') "
			+ "ORDER BY created_at DESC LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}")
	public List<Post> findAllByTitle(@Param("pageable") Pageable pageable, @Param("keyword") String keyword);

	@Select("SELECT * FROM post WHERE content LIKE CONCAT('%',#{keyword},'%') "
			+ "ORDER BY created_at DESC LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}")
	public List<Post> findAllByContent(@Param("pageable") Pageable pageable, @Param("keyword") String keyword);
	
	@Select("SELECT * FROM post  "
			+ "ORDER BY created_at DESC LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}")
	public List<Post> findAll(@Param("pageable") Pageable pageable);
	
	public long countByTitleOrContent(@Param("keyword") String keyword);

	public long countByTitle(@Param("keyword") String keyword);
	
	public long countByContent(@Param("keyword") String keyword);
	
	public long count();
	
	public void save(Post post);
	
	public Optional<Post> findById(long id);
	
	public void deleteById(long id);
	
	public void updateTitleAndContent(Post post);
	
	public void updateView(Post post);
}

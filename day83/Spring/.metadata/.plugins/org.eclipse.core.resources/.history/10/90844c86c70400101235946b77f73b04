package com.example.demo.repository;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.example.demo.domain.Post;

public interface PostRepository extends JpaRepository<Post, Integer>{

	@Query(value = "SELECT p FROM Post p LEFT JOIN FETCH p.user WHERE p.title LIKE %:title% OR p.content LIKE %:content%",
			countQuery = "SELECT COUNT(*) FROM Post p WHERE p.title LIKE %:title% OR p.content LIKE %:content%")
	public Page<Post> findAllByTitleContainingOrContentContaining(Pageable pageable, @Param("title") String title, @Param("content") String content);
	
	@Query(value = "SELECT p FROM Post p LEFT JOIN FETCH p.user WHERE p.title LIKE %:title%",
			countQuery = "SELECT COUNT(*) FROM Post p WHERE p.title LIKE %:title%")
	public Page<Post> findAllByTitleContaining(Pageable pageable, @Param("title") String title);
	
	@Query(value = "SELECT p FROM Post p LEFT JOIN FETCH p.user WHERE p.content LIKE %:content%",
			countQuery = "SELECT COUNT(*) FROM Post p WHERE p.content LIKE %:content%")
	public Page<Post> findAllByTitleContainingOrContentContaining(Pageable pageable, @Param("content") String content);
	
	@Query(value = "SELECT p FROM Post p LEFT JOIN FETCH p.user WHERE p.title LIKE %:title% OR p.content LIKE %:content%",
			countQuery = "SELECT COUNT(*) FROM Post p WHERE p.title LIKE %:title% OR p.content LIKE %:content%")
	public Page<Post> findAllByTitleContainingOrContentContaining(Pageable pageable, @Param("title") String title, @Param("content") String content);
	
	
}

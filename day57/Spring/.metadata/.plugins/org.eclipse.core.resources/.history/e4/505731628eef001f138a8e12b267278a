package com.example.demo.service;

import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.example.demo.domain.User;
import com.example.demo.error.BoardException;
import com.example.demo.error.ErrorCode;
import com.example.demo.util.JwtUtil;

import io.jsonwebtoken.ExpiredJwtException;
import io.jsonwebtoken.JwtException;
import jakarta.servlet.http.Cookie;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@Service
public class AuthService {

	private JwtUtil jwtUtil;
	private final long ACCESS_EXP = 1000 * 60 * 30;
	private final long REFRESH_EXP = 1000 * 60 * 60 * 5;
	public AuthService(JwtUtil jwtUtil) {
		super();
		this.jwtUtil = jwtUtil;
	}
	
	public void setAutentication(User user) {
		String access = this.jwtUtil.generateToken(user, ACCESS_EXP);
		String refresh = this.jwtUtil.generateToken(user, REFRESH_EXP);
		
		HttpServletResponse response = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getResponse();
		
		Cookie c = new Cookie("refresh",refresh);
		c.setPath("/");
		c.setSecure(true);
		c.setHttpOnly(true);
		
		response.addCookie(c);
		response.setHeader("Authorization", access);
	}
	
	public User authenticate() {
		HttpServletRequest request = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();
		
		String token = request.getHeader("Authorization");
		
		if(token == null || token.equals("null")) {
			throw new BoardException(ErrorCode.AUTHENTICATION_REQUIRED);
		}
		
		try {
			return this.jwtUtil.getUser(token);
		}catch (ExpiredJwtException e) {
			throw new BoardException(ErrorCode.EXPIERD_JWT);
		}catch (JwtException e) {
			throw new BoardException(ErrorCode.INVLAID_JWT);
		}
	}
}

package com.example.demo.domain;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;

@Entity
@EntityListeners(value = AuditingEntityListener.class)
public class Post {

	private Integer id;
	private String title;
	private String content;
	private String password;
	private User user;
	private Image image;
	private Integer view;
	private List<Comment> commentList;
	private List<PostLike> postLikeList;
	private Integer comments;
	private Integer postLikes;
	private LocalDateTime createdAt;
	private LocalDateTime updatedAt;
	public Post(Integer id, String title, String content, String password, User user) {
		super();
		this.id = id;
		this.title = title;
		this.content = content;
		this.password = password;
		this.user = user;
	}
	public Post() {
		super();
	}
	public Integer getId() {
		return id;
	}
	public String getTitle() {
		return title;
	}
	public String getContent() {
		return content;
	}
	public String getPassword() {
		return password;
	}
	public User getUser() {
		return user;
	}
	public Image getImage() {
		return image;
	}
	public Integer getView() {
		return view;
	}
	public List<Comment> getCommentList() {
		return commentList;
	}
	public List<PostLike> getPostLikeList() {
		return postLikeList;
	}
	public Integer getComments() {
		return comments;
	}
	public Integer getPostLikes() {
		return postLikes;
	}
	public LocalDateTime getCreatedAt() {
		return createdAt;
	}
	public LocalDateTime getUpdatedAt() {
		return updatedAt;
	}
	public void increaseView() {
		this.view++;
	}
	public void updateTitle(String title) {
		this.title = title;
	}
	public void updateContent(String content) {
		this.content = content;
	}
	public void addComment(Comment comment) {
		this.commentList.add(comment);
	}
	public void addPostLike(PostLike postLike) {
		this.postLikeList.add(postLike);
	}
	public void setImage(Image image) {
		this.image = image;
	}
	public boolean verifyPassword(String password) {
		return this.password.equals(password);
	}
	public boolean isAnonymousPost() {
		return this.user == null;
	}
	public static Builder builder() {
		return new Builder();
	}
	public static class Builder{
		private String title;
		private String content;
		private String password;
		private User user;
		public Builder title(String title) {
			this.title = title;
			return this;
		}
		public Builder content(String content) {
			this.content = content;
			return this;
		}
		public Builder password(String password) {
			this.password = password;
			return this;
		}
		public Builder user(User user) {
			this.user = user;
			return this;
		}
		public Post build() {
			return new Post(null, title, content, password, user);
		}
	}
}

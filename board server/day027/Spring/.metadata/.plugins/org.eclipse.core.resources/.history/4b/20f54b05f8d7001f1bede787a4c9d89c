package com.example.demo.error;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.MethodArgumentNotValidException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.example.demo.vo.BaseResBody;

@RestControllerAdvice
public class GlobalExceptionHandler {

	@ExceptionHandler(PostException.class)
	public ResponseEntity<BaseResBody> postException(PostException postException){
		return BaseResBody.buildResponseEntity(postException.getErrorCode().getStatus(), postException.getErrorCode().getMessage());
	}
	
	
	@ExceptionHandler(MethodArgumentNotValidException.class)
	public ResponseEntity<BaseResBody> methodArgumentNotValidException(MethodArgumentNotValidException methodArgumentNotValidException){
		return BaseResBody.buildResponseEntity(HttpStatus.BAD_REQUEST, methodArgumentNotValidException.getFieldError().getDefaultMessage());
	}
	
	@ExceptionHandler(Exception.class)
	public ResponseEntity<BaseResBody> exception(Exception exception){
		return BaseResBody.buildResponseEntity(HttpStatus.INTERNAL_SERVER_ERROR, "unknown error.:);
	}
}

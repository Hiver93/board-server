package com.example.demo.service;

import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.demo.domain.User;
import com.example.demo.error.BoardException;
import com.example.demo.error.ErrorCode;
import com.example.demo.repository.UserRepository;

@Service
public class UserService {

	private UserRepository userRepository;
	private PasswordEncoder passwordEncoder;
	public UserService(UserRepository userRepository, PasswordEncoder passwordEncoder) {
		super();
		this.userRepository = userRepository;
		this.passwordEncoder = passwordEncoder;
	}
	
	public void createUser(User user) {
		this.userRepository.findByUsername(user.getUsername()).ifPresent(u->{throw new BoardException(ErrorCode.USERNAME_CONFLICT);});
		this.userRepository.save(User.builder()
				.username(user.getUsername())
				.password(passwordEncoder.encode(user.getPassword()))
				.nickname(user.getNickname())
				.build());
	}
	
	public User getUser(User user) {
		User saved = this.userRepository.findByUsername(user.getUsername()).orElseThrow(()->{throw new BoardException(ErrorCode.INVALID_CREDENTAILS);});
	}
}

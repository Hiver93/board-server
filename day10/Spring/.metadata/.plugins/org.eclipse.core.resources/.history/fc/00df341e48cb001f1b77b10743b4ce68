package com.example.demo.board.service;

import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.stream.Collectors;

import org.springframework.data.domain.Pageable;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Service;

import com.example.demo.board.dto.ResponseDto;
import com.example.demo.board.entity.Post;
import com.example.demo.board.repository.PostRepository;

@Service
public class PostService {

	private PostRepository postRepository;
	
	public PostService(PostRepository postRepository) {
		this.postRepository = postRepository;
	}
	
	public void createPost(Post post) {
		this.postRepository.save(post);
	}
	
	public List<ResponseDto> getPostList(Pageable pageable, String keyword){
		List<Post> list = this.postRepository.findAllByTitleContaining(keyword, pageable).getContent();
		System.out.println(list);
		List<ResponseDto> re = list.stream()
				.map(post->
					new ResponseDto(
							post.getId(), 
							post.getTitle(), 
							post.getContent(),
							post.getCreatedAt().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")),
							post.getUpdatedAt().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
					)
					)
				.collect(Collectors.toList());
		System.out.println(re);
		return re;
//		return this.postRepository.findAllByTitleContaining(keyword,pageable).getContent();
	}
	
	public Post getPost(long postId) {
		return this.postRepository.findById(postId).orElseThrow();
	}
	
	public void deletePost(long postId, String password) {
		Post saved = this.postRepository.findById(postId).orElseThrow();
		if(!saved.getPassword().equals(password)) {
			throw new RuntimeException();
		}
		this.postRepository.delete(saved);
	}
	
	public void modifyPost(Post post) {
		Post saved = this.postRepository.findById(post.getId()).orElseThrow();
		if(!saved.getPassword().equals(post.getPassword())) {
			throw new RuntimeException();
		}
		saved.setTitle(post.getTitle());
		saved.setContent(post.getContent());
		this.postRepository.save(saved);
	}
}
